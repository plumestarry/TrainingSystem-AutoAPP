<prism:PrismApplication
    x:Class="AutoAPP.App"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:AutoAPP"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:prism="http://prismlibrary.com/">

    <Application.Resources>
        <ResourceDictionary>


            <!--  主题样式  -->
            <ResourceDictionary.MergedDictionaries>
                <materialDesign:BundledTheme
                    BaseTheme="Light"
                    PrimaryColor="Cyan"
                    SecondaryColor="Lime" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesign3.Defaults.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <!--  ListBox 样式  -->
            <Style x:Key="MyListBoxItemStyle" TargetType="ListBoxItem">
                <Setter Property="MinHeight" Value="40" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                            <Grid>
                                <Border x:Name="borderHeader" />
                                <Border x:Name="border" />
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Grid>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter TargetName="borderHeader" Property="BorderThickness" Value="4,0,0,0" />
                                    <Setter TargetName="borderHeader" Property="BorderBrush" Value="{DynamicResource MaterialDesign.Brush.Primary.Light}" />
                                    <Setter TargetName="border" Property="Background" Value="{DynamicResource MaterialDesign.Brush.Primary.Light}" />
                                    <Setter TargetName="border" Property="Opacity" Value="0.2" />
                                </Trigger>

                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="{DynamicResource MaterialDesign.Brush.Primary.Light}" />
                                    <Setter TargetName="border" Property="Opacity" Value="0.2" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--  文字悬浮样式  -->
            <Style x:Key="HoverableTextBlockStyle" TargetType="TextBlock">
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="Foreground" Value="Black" />
                <Setter Property="TextDecorations" Value="None" />
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Foreground" Value="Cyan" />
                        <Setter Property="TextDecorations" Value="Underline" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!--  按钮样式  -->
            <Style x:Key="IconOnlyPaddedAreaButtonStyle" TargetType="Button">
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource Self}}" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="Padding" Value="0" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border
                                x:Name="InteractionBorder"
                                Padding="5"
                                Background="Transparent"
                                BorderBrush="Transparent"
                                BorderThickness="1"
                                CornerRadius="5">
                                <ContentPresenter
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Content="{TemplateBinding Content}"
                                    ContentTemplate="{TemplateBinding ContentTemplate}" />
                            </Border>

                            <ControlTemplate.Triggers>
                                <!--  鼠标悬浮时的边框颜色  -->
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="InteractionBorder" Property="BorderBrush" Value="Gray" />
                                </Trigger>

                                <!--  按钮被点击时添加阴影  -->
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="InteractionBorder" Property="Effect">
                                        <Setter.Value>
                                            <DropShadowEffect
                                                BlurRadius="10"
                                                Opacity="0.5"
                                                ShadowDepth="2"
                                                Color="Black" />
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>

                                <!--  按钮不可用时的透明度  -->
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" Value="0.5" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--  窗口样式  -->
            <Style TargetType="{x:Type Window}">
                <Setter Property="WindowStyle" Value="None" />
                <Setter Property="AllowsTransparency" Value="True" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Window}">
                            <Border
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="15">
                                <Border
                                    Padding="{TemplateBinding Padding}"
                                    Background="White"
                                    CornerRadius="15">
                                    <ContentPresenter x:Name="PART_ClientArea" Content="{TemplateBinding Content}" />
                                </Border>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Background" Value="White" />
                <Setter Property="BorderBrush" Value="Gray" />
                <Setter Property="BorderThickness" Value="1" />
            </Style>

        </ResourceDictionary>
    </Application.Resources>
</prism:PrismApplication>
